openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost'
paths:
  /api/login:
    post:
      summary: ''
      operationId: postApiLogin
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                national_code:
                  type: string
                  description: ''
                  example: non
                password:
                  type: string
                  description: ''
                  example: WDU$\1TG
              required:
                - national_code
                - password
      security: []
  '/api/register/{role}':
    post:
      summary: ''
      operationId: postApiRegisterRole
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: role
        description: ''
        example: cupiditate
        required: true
        schema:
          type: string
  /api/logout:
    post:
      summary: ''
      operationId: postApiLogout
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/refresh:
    post:
      summary: ''
      operationId: postApiRefresh
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/users/me:
    post:
      summary: ''
      operationId: postApiUsersMe
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/users:
    get:
      summary: ''
      operationId: getApiUsers
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  '/api/users/{id}':
    get:
      summary: ''
      operationId: getApiUsersId
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiUsersId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: ''
                  example: null
                first_name:
                  type: string
                  description: ''
                  example: qui
                last_name:
                  type: string
                  description: ''
                  example: et
                national_code:
                  type: string
                  description: ''
                  example: null
                phone_number:
                  type: string
                  description: ''
                  example: null
                email:
                  type: string
                  description: ''
                  example: null
                address:
                  type: string
                  description: ''
                  example: et
                password:
                  type: string
                  description: ''
                  example: 'BO?(Z1x<{j38z3];'
                role:
                  type: string
                  description: ''
                  example: magnam
      security: []
    delete:
      summary: ''
      operationId: deleteApiUsersId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the user.'
        example: assumenda
        required: true
        schema:
          type: string
  /api/organizations:
    get:
      summary: 'Display a listing of the organizations.'
      operationId: displayAListingOfTheOrganizations
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: 'Store a newly created organization in storage.'
      operationId: storeANewlyCreatedOrganizationInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  '/api/organizations/{id}':
    get:
      summary: 'Display the specified organization.'
      operationId: displayTheSpecifiedOrganization
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: 'Update the specified organization in storage.'
      operationId: updateTheSpecifiedOrganizationInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    delete:
      summary: 'Remove the specified organization from storage.'
      operationId: removeTheSpecifiedOrganizationFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the organization.'
        example: voluptatem
        required: true
        schema:
          type: string
  /api/product-categories:
    get:
      summary: 'Display a listing of the product categories.'
      operationId: displayAListingOfTheProductCategories
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: 'Store a newly created product category in storage.'
      operationId: storeANewlyCreatedProductCategoryInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: est
                description:
                  type: string
                  description: ''
                  example: 'Vel sed numquam ut tenetur quia voluptates ea.'
              required:
                - name
      security: []
  '/api/product-categories/{id}':
    get:
      summary: 'Display the specified product category.'
      operationId: displayTheSpecifiedProductCategory
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: 'Update the specified product category in storage.'
      operationId: updateTheSpecifiedProductCategoryInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: aut
                description:
                  type: string
                  description: ''
                  example: 'Occaecati dicta esse est in soluta.'
      security: []
    delete:
      summary: 'Remove the specified product category from storage.'
      operationId: removeTheSpecifiedProductCategoryFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the product category.'
        example: harum
        required: true
        schema:
          type: string
  /api/products:
    get:
      summary: 'Display a listing of the products.'
      operationId: displayAListingOfTheProducts
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: 'Store a newly created product in storage.'
      operationId: storeANewlyCreatedProductInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: corrupti
                category_id:
                  type: string
                  description: ''
                  example: null
                type:
                  type: string
                  description: 'Must be one of <code>product</code> or <code>cash</code>.'
                  example: product
                quantity:
                  type: integer
                  description: ''
                  example: 1
                description:
                  type: string
                  description: ''
                  example: 'Voluptatem molestiae ut blanditiis non debitis quod.'
              required:
                - name
                - type
                - quantity
      security: []
  '/api/products/{id}':
    get:
      summary: 'Display the specified product.'
      operationId: displayTheSpecifiedProduct
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: 'Update the specified product in storage.'
      operationId: updateTheSpecifiedProductInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: quo
                category_id:
                  type: string
                  description: ''
                  example: null
                type:
                  type: string
                  description: 'Must be one of <code>product</code> or <code>cash</code>.'
                  example: product
                quantity:
                  type: integer
                  description: ''
                  example: 20
                description:
                  type: string
                  description: ''
                  example: 'Ut cumque numquam dolore provident quibusdam nobis ut.'
      security: []
    delete:
      summary: 'Remove the specified product from storage.'
      operationId: removeTheSpecifiedProductFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the product.'
        example: itaque
        required: true
        schema:
          type: string
  /api/people-aids:
    get:
      summary: 'Display a listing of the people aids.'
      operationId: displayAListingOfThePeopleAids
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: 'Store a newly created people aid in storage.'
      operationId: storeANewlyCreatedPeopleAidInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  '/api/people-aids/{id}':
    get:
      summary: 'Display the specified people aid.'
      operationId: displayTheSpecifiedPeopleAid
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: 'Update the specified people aid in storage.'
      operationId: updateTheSpecifiedPeopleAidInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    delete:
      summary: 'Remove the specified people aid from storage.'
      operationId: removeTheSpecifiedPeopleAidFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the people aid.'
        example: non
        required: true
        schema:
          type: string
  /api/packages:
    get:
      summary: 'Display a listing of the packages.'
      operationId: displayAListingOfThePackages
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: 'Store a newly created package in storage.'
      operationId: storeANewlyCreatedPackageInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  '/api/packages/{id}':
    get:
      summary: 'Display the specified package.'
      operationId: displayTheSpecifiedPackage
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: 'Update the specified package in storage.'
      operationId: updateTheSpecifiedPackageInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    delete:
      summary: 'Remove the specified package from storage.'
      operationId: removeTheSpecifiedPackageFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the package.'
        example: tempora
        required: true
        schema:
          type: string
  /api/aid-allocations:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
tags:
  -
    name: Endpoints
    description: ''
